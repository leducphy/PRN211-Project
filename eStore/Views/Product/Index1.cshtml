@model PaginatedList<BusinessObject.Product>

@using System.Security.Claims

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    var claim = User.Claims.SingleOrDefault(c => c.Type.Equals(ClaimTypes.Name));
    var role = "User";
    if (claim != null)
    {
        if (claim.Value.Equals("Admin"))
        {
            role = "Admin";
        }
    }

    if (role.Equals("Admin"))
    {
        ViewData["Title"] = "Product Management";
        <h1>Product Management</h1>
    }
    else
    {
        ViewData["Title"] = "Shopping";

    }
}

@if (role.Equals("Admin"))
{
    <p>
        <a class="btn btn-outline-info" asp-action="Create">Create New Product</a>
    </p>
}



@if (TempData["Create"] != null && !string.IsNullOrEmpty(TempData["Create"].ToString()))
{
    await Html.RenderPartialAsync("Alert", new ViewDataDictionary(ViewData) { { "role", "success" }, { "message", TempData["Create"] } });
}
@if (TempData["Update"] != null && !string.IsNullOrEmpty(TempData["Update"].ToString()))
{
    await Html.RenderPartialAsync("Alert", new ViewDataDictionary(ViewData) { { "role", "success" }, { "message", TempData["Update"] } });
}
@if (TempData["Delete"] != null && !string.IsNullOrEmpty(TempData["Delete"].ToString()))
{
    await Html.RenderPartialAsync("Alert", new ViewDataDictionary(ViewData) { { "role", "success" }, { "message", TempData["Delete"] } });
}
<div class="container row" style="display: flex; justify-content: space-evenly; width: 100%">

    <div class="col col-12">
        <form asp-action="Index" asp-controller="Product" method="get">
            <div class="form-group">
                <div class="row">
                    <div class="col-md-3">
                        <label for="search" class="d-inline">Search by Product Name: </label>
                    </div>
                    <div class="col-md-5">
                        <input id="search" name="search" class="d-inline form-control" value="@ViewBag.Search" />
                    </div>
                    <div class="col-md-3">
                        <select name="category" class="btn btn-light w-100">
                            <option value="0">All</option>
                            @foreach (var item in ViewBag.Categories)
                            {
                                @if (ViewBag.SelectedCate == item.CategoryId)
                                {
                                    <option selected value="@item.CategoryId">@item.CategoryName</option>

                                }
                                else
                                {
                                    <option value="@item.CategoryId">@item.CategoryName</option>
                                }

                            }
                        </select>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-md-3">
                        <label for="from" class="d-inline">Unit Price:</label>
                    </div>
                    <div class="col-md-4">
                        <div class="row">
                            <div class="col-md-2">
                                <label for="form" class="d-inline">From</label>
                            </div>
                            <div class="col-md-10">
                                <input id="from" name="from" aria-describedby="unitPriceHelp" class="d-inline form-control" value="@ViewBag.From" type="number" />
                            </div>

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="row">
                            <div class="col-md-2">
                                <label for="to" class="d-inline">To</label>
                            </div>
                            <div class="col-md-10">
                                <input id="to" name="to" class="d-block form-control" value="@ViewBag.To" type="number" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="offset-md-3">
                        <small id="unitPriceHelp" class="form-text text-muted">Leave the two inputs both blank if you don't want to filter by Unit Price</small>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-3">
                        <input type="submit" class="btn btn-outline-primary d-inline mt-sm-3 mt-md-0" value="Search" />
                    </div>
                </div>
            </div>
        </form>
        @if (ViewBag.Error != null)
        {
            <div class="row mt-3">
                <div class="alert alert-danger" role="alert">@ViewBag.Error</div>
            </div>
        }
        else
        {
            @if (Model == null || !Model.Any())
            {
                <div class="text-danger">No results found!!</div>
            }
            else
            {
                <div class="product-list row mb-3">
                    @foreach (var item in Model)
                    {
                        <div class="product text-center pb-2" style="width: 21%; margin: 10px 10px; background-color: rgba(247, 240, 244, 0.8); border-radius: 5px; border: none">
                            <img class="product-img" src="~/img/iphone-14-pro-93.jpg" /><br>
                            <div class="name"><a href="detail.jsp?model=${p.getProductID()}">@item.ProductName</a></div>
                            <div class="price">@item.UnitPrice</div>
                            <div>
                                <a asp-action="Details" asp-route-id="@item.ProductId" class="btn btn-primary">Detail</a>
                            </div>
                        </div>

                    }
                </div>



                // Phân trang
                <div>
                    @{
                        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                    }
                    <a asp-action="Index" asp-route-page="@(Model.PageIndex - 1)" class="btn btn-outline-primary @prevDisabled">Previous</a>
                    <a asp-action="Index" asp-route-page="@(Model.PageIndex + 1)" class="btn btn-outline-primary @nextDisabled">Next</a>
                </div>
            }
        }
    </div>
</div>

<style>
    .list-product-container {
        display: flex;
        flex-wrap: wrap;
    }

    .product-list {
        display: flex;
        flex-wrap: wrap;
    }

    .product-item {
        width: 30%;
        border: 1px solid black;
    }

    .product-img {
        width: 100%;
    }
</style>